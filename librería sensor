# urequests.py - Biblioteca simple para solicitudes HTTP

import usocket

class Response:
    def __init__(self, sock):
        self._sock = sock
        self._content = None

    def close(self):
        if self._sock:
            self._sock.close()
            self._sock = None

    @property
    def text(self):
        return self.content.decode('utf-8')

    @property
    def content(self):
        if self._content is None:
            self._content = self._sock.read()
            self._sock.close()
            self._sock = None
        return self._content

    def json(self):
        import ujson
        return ujson.loads(self.content)

def request(method, url, data=None, json=None, headers={}, stream=None):
    _, _, host, path = url.split('/', 3)
    addr = usocket.getaddrinfo(host, 80)[0][-1]
    s = usocket.socket()
    s.connect(addr)
    s.send(f"{method} /{path} HTTP/1.0\r\nHost: {host}\r\n".encode())
    for k, v in headers.items():
        s.send(f"{k}: {v}\r\n".encode())
    if json is not None:
        import ujson
        data = ujson.dumps(json)
        s.send(b"Content-Type: application/json\r\n")
    if data:
        s.send(f"Content-Length: {len(data)}\r\n\r\n".encode())
        s.send(data)
    else:
        s.send(b"\r\n")
    return Response(s)

def get(url, **kw):
    return request("GET", url, **kw)

def post(url, **kw):
    return request("POST", url, **kw)

def put(url, **kw):
    return request("PUT", url, **kw)

def delete(url, **kw):
    return request("DELETE", url, **kw)
